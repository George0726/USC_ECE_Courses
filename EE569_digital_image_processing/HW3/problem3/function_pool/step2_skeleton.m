function output =step2_skeleton(M)

[m,n] = size(M);
output = zeros(m,n);
M_pad = zero_padding(M);

for i=1:m
    for j=1:n
        if M_pad(i + 1,j + 1) == 0
            continue
        end
        % spur
        spur1 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && M_pad(i + 1 + 1,j + 1 + 1);
        spur2 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        spur3 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        spur4 = M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        % Single 4-connection
        s4c1 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        s4c2 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        s4c3 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        s4c4 = ~M_pad(i + 1 - 1,j + 1 - 1) && M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        % L Corner
        l1 = ~M_pad(i + 1 - 1,j + 1 - 1) && M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        l2 = ~M_pad(i + 1 - 1,j + 1 - 1) && M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        l3 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        l4 = ~M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
        % Corner Cluster
        cc1 = M_pad(i + 1 - 1,j + 1 - 1) && M_pad(i + 1 - 1,j + 1) && ...
             M_pad(i + 1,j + 1 - 1);
        cc2 = M_pad(i + 1,j + 1 + 1) && ...
            M_pad(i + 1 + 1,j + 1) && M_pad(i + 1 + 1,j + 1 + 1);
        % Tee Branch
        tb1 = M_pad(i + 1 - 1,j + 1) && ...
             M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1);
        tb2 = M_pad(i + 1 - 1,j + 1) && ...
             M_pad(i + 1, j + 1 - 1) && ...
             M_pad(i + 1 + 1,j + 1);
        tb3 = M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1) && ...
             M_pad(i + 1 + 1,j + 1);
        tb4 = M_pad(i + 1 - 1,j + 1) && ...
             M_pad(i + 1, j + 1 + 1) && ...
             M_pad(i + 1 + 1,j + 1);
        % Vee Branch
        vb1 = M_pad(i + 1 - 1,j + 1 - 1) && M_pad(i + 1 - 1,j + 1 + 1) && ...
             (M_pad(i + 1 + 1,j + 1 - 1) || M_pad(i + 1 + 1,j + 1) || M_pad(i + 1 + 1,j + 1 + 1));
        vb2 = M_pad(i + 1 - 1,j + 1 - 1) && ...
             M_pad(i + 1 + 1,j + 1 - 1) && ...
             (M_pad(i + 1 - 1,j + 1 + 1) || M_pad(i + 1,j + 1 + 1) || M_pad(i + 1 + 1,j + 1 + 1));
        vb3 = M_pad(i + 1 + 1,j + 1 - 1) && M_pad(i + 1 + 1,j + 1 + 1) && ...
             (M_pad(i + 1 - 1,j + 1 - 1) || M_pad(i + 1 - 1,j + 1) || M_pad(i + 1 - 1,j + 1 + 1));
        vb4 = M_pad(i + 1 - 1,j + 1 + 1) && ...
             M_pad(i + 1 + 1,j + 1 + 1) && ...
             (M_pad(i + 1 - 1,j + 1 - 1) || M_pad(i + 1, j + 1 - 1) || M_pad(i + 1 + 1,j + 1 - 1));
        % Diagonal Branch
        db1 = M_pad(i + 1 - 1,j + 1) && ~M_pad(i + 1 - 1,j + 1 + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1) && ...
             M_pad(i + 1 + 1,j + 1 - 1) && ~M_pad(i + 1 + 1,j + 1);
        db2 = ~M_pad(i + 1 - 1,j + 1 - 1) && M_pad(i + 1 - 1,j + 1) && ...
             M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1) && M_pad(i + 1 + 1,j + 1 + 1);
        db3 = ~M_pad(i + 1 - 1,j + 1) && M_pad(i + 1 - 1,j + 1 + 1) && ...
             M_pad(i + 1, j + 1 - 1) && ~M_pad(i + 1,j + 1 + 1) && ...
             ~M_pad(i + 1 + 1,j + 1 - 1) && M_pad(i + 1 + 1,j + 1);
        db4 = M_pad(i + 1 - 1,j + 1 - 1) && ~M_pad(i + 1 - 1,j + 1) && ...
             ~M_pad(i + 1, j + 1 - 1) && M_pad(i + 1,j + 1 + 1) && ...
             M_pad(i + 1 + 1,j + 1) && ~M_pad(i + 1 + 1,j + 1 + 1);
     add_ed = M_pad(i + 1, j + 1 ) && M_pad(i + 1,j + 1 + 1) && ...
         M_pad(i + 1 + 1,j + 1) && M_pad(i + 1 + 1,j + 1 + 1);
        
        output(i,j) = ~(spur1 || spur2 || spur3 || spur4 || s4c1 || s4c2 || s4c3 || s4c4 || l1 || l2 || l3 || l4 || ...
            cc1 || cc2 || tb1 || tb2 || tb3 || tb4 || vb1 || vb2 || vb3 || vb4 || db1 || db2 || db3 || db4 ||add_ed);
    end
end
end
        
